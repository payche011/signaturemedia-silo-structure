name: Build & Release plugin

on:
  push:
    tags:
      - 'v*'            # run when you push a tag like v2.3.0

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Optional: make sure your plugin header version matches the tag
      - name: Verify plugin version matches tag
        id: ver
        run: |
          TAG="${GITHUB_REF_NAME}"                 # e.g. v2.3.0
          VER="${TAG#v}"                           # 2.3.0
          FILE="signaturemedia-silo-structure.php" # main plugin file in repo root
          if ! grep -q "Version: ${VER}" "$FILE"; then
            echo "Plugin header version does not match tag ${VER}"
            exit 1
          fi
          echo "version=${VER}" >> $GITHUB_OUTPUT

      # Build a clean ZIP whose TOP-LEVEL FOLDER is exactly:
      #   signaturemedia-silo-structure/
      - name: Build ZIP
        run: |
          set -e
          PLUGIN_DIR="signaturemedia-silo-structure"
          BUILD_DIR="build"
          ZIP_NAME="${PLUGIN_DIR}-${GITHUB_REF_NAME}.zip"

          rm -rf "${BUILD_DIR}"
          mkdir -p "${BUILD_DIR}/${PLUGIN_DIR}"

          # Copy repo content into package folder
          rsync -a \
            --exclude ".git" \
            --exclude ".github" \
            --exclude ".gitignore" \
            --exclude ".gitattributes" \
            --exclude "build" \
            --exclude "node_modules" \
            ./ "${BUILD_DIR}/${PLUGIN_DIR}/"

          # Create the zip from inside build/
          (cd "${BUILD_DIR}" && zip -r "../${ZIP_NAME}" "${PLUGIN_DIR}")

          echo "ZIP_PATH=${ZIP_NAME}" >> $GITHUB_ENV

      # Create a GitHub Release and upload the asset ZIP
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: ${{ env.ZIP_PATH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
